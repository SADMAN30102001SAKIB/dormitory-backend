# Generated by Django 5.2.1 on 2025-06-06 13:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_remove_profile_institution_name_profile_about_me_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='achievement',
            name='achievement_type',
            field=models.CharField(choices=[('award', 'Award/Recognition'), ('certification', 'Certification'), ('competition', 'Competition'), ('publication', 'Publication'), ('scholarship', 'Scholarship'), ('volunteer', 'Volunteer Recognition'), ('other', 'Other')], default='award', max_length=20),
        ),
        migrations.CreateModel(
            name='CompetitiveAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_name', models.CharField(max_length=200)),
                ('platform', models.CharField(choices=[('codeforces', 'Codeforces'), ('codechef', 'CodeChef'), ('atcoder', 'AtCoder'), ('topcoder', 'TopCoder'), ('leetcode', 'LeetCode'), ('hackerrank', 'HackerRank'), ('icpc', 'ICPC'), ('ioi', 'IOI'), ('other', 'Other')], max_length=20)),
                ('rank', models.PositiveIntegerField(help_text='Your rank in the contest')),
                ('total_participants', models.PositiveIntegerField(blank=True, help_text='Total number of participants', null=True)),
                ('rating_change', models.IntegerField(blank=True, help_text='Rating change (+/-)', null=True)),
                ('final_rating', models.PositiveIntegerField(blank=True, help_text='Rating after contest', null=True)),
                ('contest_date', models.DateField()),
                ('contest_url', models.URLField(blank=True, null=True)),
                ('problems_solved', models.PositiveIntegerField(blank=True, help_text='Number of problems solved', null=True)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_achievements', to='users.profile')),
            ],
            options={
                'ordering': ['-contest_date'],
            },
        ),
        migrations.CreateModel(
            name='HackathonAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hackathon_name', models.CharField(max_length=200)),
                ('organizer', models.CharField(max_length=200)),
                ('prize_position', models.CharField(choices=[('winner', 'Winner/1st Place'), ('runner_up', 'Runner Up/2nd Place'), ('third', '3rd Place'), ('finalist', 'Finalist'), ('participant', 'Participant'), ('special_award', 'Special Award')], max_length=20)),
                ('project_title', models.CharField(max_length=200)),
                ('project_description', models.TextField()),
                ('team_members', models.TextField(blank=True, help_text='Team member names (comma separated)')),
                ('event_date', models.DateField()),
                ('duration_days', models.PositiveIntegerField(default=1, help_text='Duration of hackathon in days')),
                ('project_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('demo_url', models.URLField(blank=True, null=True)),
                ('prize_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_achievements', to='users.profile')),
                ('technologies_used', models.ManyToManyField(blank=True, related_name='hackathon_projects', to='users.skill')),
            ],
            options={
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='InternshipAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=200)),
                ('program_type', models.CharField(choices=[('gsoc', 'Google Summer of Code'), ('gsod', 'Google Season of Docs'), ('outreachy', 'Outreachy'), ('lfx', 'Linux Foundation Mentorship'), ('mlh', 'MLH Fellowship'), ('corporate', 'Corporate Internship'), ('research', 'Research Internship'), ('other', 'Other Program')], max_length=20)),
                ('organization', models.CharField(max_length=200)),
                ('project_title', models.CharField(max_length=300)),
                ('project_description', models.TextField()),
                ('mentor_name', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('stipend_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('project_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('certificate_url', models.URLField(blank=True, null=True)),
                ('completion_status', models.CharField(choices=[('completed', 'Completed'), ('ongoing', 'Ongoing')], default='completed', max_length=20)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internship_achievements', to='users.profile')),
                ('technologies_used', models.ManyToManyField(blank=True, related_name='internship_projects', to='users.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('abstract', models.TextField(blank=True)),
                ('publication_type', models.CharField(choices=[('journal', 'Journal Paper'), ('conference', 'Conference Paper'), ('thesis', 'Thesis/Dissertation'), ('preprint', 'Preprint'), ('book', 'Book/Chapter'), ('patent', 'Patent'), ('report', 'Technical Report')], max_length=20)),
                ('journal_conference', models.CharField(blank=True, help_text='Journal/Conference name', max_length=200)),
                ('authors', models.TextField(help_text='All authors (comma separated)')),
                ('publication_date', models.DateField()),
                ('doi', models.CharField(blank=True, help_text='DOI identifier', max_length=100)),
                ('url', models.URLField(blank=True, null=True)),
                ('pdf_url', models.URLField(blank=True, null=True)),
                ('citations', models.PositiveIntegerField(blank=True, default=0)),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.institution')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='users.profile')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
    ]
