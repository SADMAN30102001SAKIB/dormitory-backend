# Generated by Django 5.2.1 on 2025-06-06 12:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='profile',
            name='institution_name',
        ),
        migrations.AddField(
            model_name='profile',
            name='about_me',
            field=models.TextField(blank=True, help_text='Detailed about me section'),
        ),
        migrations.AddField(
            model_name='profile',
            name='address',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1),
        ),
        migrations.AddField(
            model_name='profile',
            name='personal_website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_year', models.PositiveIntegerField()),
                ('end_year', models.PositiveIntegerField(blank=True, help_text='Leave blank if currently studying', null=True)),
                ('is_current', models.BooleanField(default=False, help_text='Currently studying here')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to='users.profile')),
            ],
            options={
                'ordering': ['-start_year'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('achievement_type', models.CharField(choices=[('award', 'Award'), ('recognition', 'Recognition'), ('publication', 'Publication'), ('certification', 'Certification'), ('honor', 'Honor')], default='award', max_length=20)),
                ('issuer', models.CharField(help_text='Organization/Institution that issued this', max_length=200)),
                ('date_received', models.DateField()),
                ('url', models.URLField(blank=True, help_text='Link to certificate/publication/etc', null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='users.profile')),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievements', to='users.institution')),
            ],
            options={
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='users.profile')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('profile', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_type', models.CharField(choices=[('personal', 'Personal'), ('collaborative', 'Collaborative')], default='personal', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if ongoing', null=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('project_url', models.URLField(blank=True, help_text='Project demo/repository link', null=True)),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository link', null=True)),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='users.institution')),
                ('collaborators', models.ManyToManyField(blank=True, help_text='Other users who collaborated on this project', related_name='collaborated_projects', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='users.profile')),
                ('technologies', models.ManyToManyField(blank=True, related_name='projects', to='users.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('provider', models.CharField(help_text='Course provider/platform', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('certificate_url', models.URLField(blank=True, help_text='Link to certificate', null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='users.profile')),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='users.institution')),
                ('skills_learned', models.ManyToManyField(blank=True, related_name='courses', to='users.skill')),
            ],
            options={
                'ordering': ['-completion_date'],
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Job title/designation/role', max_length=200)),
                ('company_name', models.CharField(help_text='Company/Organization name', max_length=200)),
                ('experience_type', models.CharField(choices=[('job', 'Job'), ('volunteering', 'Volunteering'), ('club', 'Club/Organization'), ('internship', 'Internship')], default='job', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if currently working', null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='users.profile')),
                ('skills', models.ManyToManyField(blank=True, related_name='work_experiences', to='users.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to='users.profile')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('profile', 'name')},
            },
        ),
    ]
