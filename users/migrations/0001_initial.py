# Generated by Django 5.2.1 on 2025-06-06 21:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('about_me', models.TextField(blank=True, help_text='Detailed about me section')),
                ('address', models.TextField(blank=True)),
                ('personal_website', models.URLField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the user first joined')),
                ('profile_summary', models.TextField(blank=True, help_text="A brief summary of the user's profile generated by LLM", null=True)),
                ('profile_memory', models.TextField(blank=True, help_text="A memory of the user's interactions with LLM for cross-conversation context", null=True)),
                ('users_embedding', models.TextField(blank=True, help_text="The user's profile embedding for recommendations generated by LLM", null=True)),
                ('interests', models.ManyToManyField(blank=True, related_name='profiles', to='users.interest')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('skills', models.ManyToManyField(blank=True, related_name='profiles', to='users.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major', models.CharField(blank=True, help_text='Field of study/Major', max_length=200, null=True)),
                ('degree', models.CharField(blank=True, choices=[('associate', 'Associate Degree'), ('bachelor', "Bachelor's Degree"), ('master', "Master's Degree"), ('doctorate', 'Doctorate/PhD'), ('diploma', 'Diploma'), ('certificate', 'Certificate'), ('other', 'Other')], help_text='Type of degree', max_length=20, null=True)),
                ('series', models.CharField(blank=True, help_text="Series/Batch (e.g., 'Fall 2020', '21st Batch')", max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if currently studying', null=True)),
                ('is_current', models.BooleanField(default=False, help_text='Currently studying here')),
                ('description', models.TextField(blank=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='users.institution')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='users.profile')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('achievement_type', models.CharField(choices=[('award', 'Award/Recognition'), ('certification', 'Certification'), ('competition', 'Competition/Contest'), ('hackathon', 'Hackathon'), ('internship', 'Internship/Fellowship'), ('scholarship', 'Scholarship'), ('other', 'Other')], default='award', max_length=20)),
                ('issuer', models.CharField(help_text='Organization that issued this', max_length=200)),
                ('date_received', models.DateField()),
                ('url', models.URLField(blank=True, help_text='Link to certificate or details', null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='users.profile')),
            ],
            options={
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, help_text='Brief description of the publication')),
                ('publication_type', models.CharField(choices=[('journal', 'Journal Paper'), ('conference', 'Conference Paper'), ('thesis', 'Thesis/Dissertation'), ('book', 'Book/Chapter'), ('other', 'Other')], max_length=20)),
                ('authors', models.CharField(help_text='All authors (comma separated)', max_length=500)),
                ('publication_date', models.DateField()),
                ('url', models.URLField(blank=True, help_text='Link to publication', null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='users.profile')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_type', models.CharField(choices=[('personal', 'Personal'), ('collaborative', 'Collaborative')], default='personal', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if ongoing', null=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('project_url', models.URLField(blank=True, help_text='Project demo/repository link', null=True)),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository link', null=True)),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='users.institution')),
                ('collaborators', models.ManyToManyField(blank=True, help_text='Other users who collaborated on this project', related_name='collaborated_projects', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='users.profile')),
                ('technologies', models.ManyToManyField(blank=True, related_name='projects', to='users.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('provider', models.CharField(help_text='Course provider/platform', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('certificate_url', models.URLField(blank=True, help_text='Link to certificate', null=True)),
                ('associated_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='users.institution')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='users.profile')),
                ('skills_learned', models.ManyToManyField(blank=True, related_name='courses', to='users.skill')),
            ],
            options={
                'ordering': ['-completion_date'],
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Job title/designation/role', max_length=200)),
                ('experience_type', models.CharField(choices=[('job', 'Job'), ('volunteering', 'Volunteering'), ('club', 'Club/Organization'), ('internship', 'Internship')], default='job', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if currently working', null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='users.profile')),
                ('skills', models.ManyToManyField(blank=True, related_name='work_experiences', to='users.skill')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='users.workorganization')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
